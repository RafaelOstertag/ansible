# Maintained by Ansible
#
#	$OpenBSD: pf.conf,v 1.49 2009/09/17 06:39:03 jmc Exp $
#
# See pf.conf(5) for syntax and examples.
# Remember to set net.inet.ip.forwarding=1 and/or net.inet6.ip6.forwarding=1
# in /etc/sysctl.conf if packets are to be forwarded between interfaces.

set skip on lo
set block-policy return
set loginterface re1

dmz_if = "re2"
ext_if = "re1"
int_if = "re0"

include "/etc/pf.conf.d/macros.conf"
include "/etc/pf.conf.d/ec2.macros.conf"

# tables
table <localnets> persist { $lan1, $dmz1, $vpn1, 192.168.101.21, 192.168.101.22, 192.168.101.23 , 192.168.101.24, 192.168.101.25, 192.168.101.26, 192.168.101.27, 192.168.101.28, 192.168.101.29, 192.168.101.30}
table <localnets6> persist { $lan2, $dmz2 }

# All hosts beside those are blocked from connecting port 25, or 587 outbound
#
# It is a table since `! { 192.168.100.2 }
# does not work (as of OpenBSD 5.3)
table <smtpallowedv4> persist { 192.168.100.2, $vpn1 }

# Antispoof
antispoof log quick for $ext_if
antispoof log quick for $int_if
antispoof log quick for $dmz_if

# scrub incomming packets
match in all scrub (no-df)

block log all

# Reduce noise in log
block in quick on $ext_if proto carp from 10.139.0.241
block in quick on $ext_if proto udp from 192.168.1.1 port 1900
block in quick on $ext_if proto igmp from 192.168.1.1

##
## Internal traffic
##
pass quick on $int_if inet6 proto $allprotov6 from <localnets6> to <localnets6> no state
pass quick on $int_if proto $allproto from <localnets> to <localnets> no state
pass in on $int_if proto $allproto from $lan1 to any modulate state
pass out quick on $int_if proto { tcp, udp } from any to 192.168.100.101 port 40000:40050 modulate state
pass quick on $int_if inet6 proto icmp6 to { fe80::/64, fec0::/10, ff02::/32 } no state # Needed to make things faster
pass quick on $int_if inet6 proto icmp6 from { fe80::/64, fec0::/10, ff02::/32 } no state # Needed to make things faster

pass in quick on $int_if proto tcp from $prometheus_server to port 9100 modulate state
pass in quick on $int_if proto tcp from $prometheus_server6 to port 9100 modulate state

##
## Internal traffic end
##

include "/etc/pf.conf.d/dmz.conf"
include "/etc/pf.conf.d/ec2.vpn.conf"
#
# Externel traffic
#

# Block outgoing SMTP
block out quick log on $ext_if proto tcp from ! <smtpallowedv4> to any port { 25, 587 }

# nat
match out on $ext_if proto $allproto from <localnets> to any nat-to ($ext_if)
pass out on $ext_if proto $allproto from <localnets> to any modulate state
# OpenVPN nat
match out on $ext_if proto udp from $wlan1 to port $vpnserverports nat-to ($ext_if)
pass out on $ext_if proto udp from $wlan1 to port $vpnserverports modulate state
# icmp allowed
pass in on $ext_if inet proto icmp from any to ($ext_if) icmp-type echoreq keep state
# dhcp
pass in quick on $ext_if inet proto udp from any to any port 68 no state
pass out quick on $ext_if inet proto udp from any port 67 to any no state
# port forwarding
pass in on $ext_if proto tcp from any to ($ext_if) port $sshserverports rdr-to $sshserver modulate state
pass in on $ext_if proto udp from any to ($ext_if) port $vpnserverports rdr-to $vpnserver modulate state
pass in log on $ext_if proto { tcp, udp } from any to ($ext_if) port 40000:40050 rdr-to 192.168.100.101 modulate state

# allow all outgoing traffic
pass out on $ext_if proto $allproto modulate state

# filter rules and anchor for ftp-proxy(8)
#anchor "ftp-proxy/*"
#pass in quick proto tcp to port ftp rdr-to 127.0.0.1 port 8021

# anchor for relayd(8)
#anchor "relayd/*"

# rules for spamd(8)
#table <spamd-white> persist
#table <nospamd> persist file "/etc/mail/nospamd"
#pass in on egress proto tcp from any to any port smtp \
#    rdr-to 127.0.0.1 port spamd
#pass in on egress proto tcp from <nospamd> to any port smtp
#pass in log on egress proto tcp from <spamd-white> to any port smtp
#pass out log on egress proto tcp to any port smtp


#block in quick from urpf-failed to any	# use with care

# By default, do not permit remote connections to X11
block in on ! lo0 proto tcp to port 6000:6010
