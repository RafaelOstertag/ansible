# Ansible managed file

mount.devfs;
mount.procfs;
mount.fdescfs;
ip4 = inherit;
ip6 = inherit;
ip6.addr = "fd3e:be3e:ec34::1";
ip4.addr = "192.168.100.1";

#
# Lean Jails
#
git {
	# We don't have to switch to an unprivileged user, since
	# we're running ssh, which takes care of that
	host.hostname = git;
	path = /var/jails/git;
	mount = "/var/git /var/jails/git/var/git nullfs rw 0 0";
	exec.start = "/bin/sh /etc/rc.d/sshd start";
	exec.stop = "/bin/sh /etc/rc.d/sshd stop";
}

nexus {
      host.hostname = nexus;
      path = /var/jails/nexus;
      mount = "/var/nexus /var/jails/nexus/var/nexus nullfs rw 0 0";
      exec.start = "/bin/sh /opt/nexus/bin/nexus start";
      exec.stop = "/bin/sh /opt/nexus/bin/nexus stop";
      exec.jail_user = nexus;
      # Required to make nexus (elasticsearch) work
      enforce_statfs=1;
}

jenkins {
      host.hostname = jenkins;
      path = /var/jails/jenkins;
      mount = "/var/jenkins /var/jails/jenkins/usr/local/jenkins nullfs rw 0 0";
      exec.start = "/bin/sh /usr/local/etc/rc.d/jenkins start";
      exec.stop = "/bin/sh /usr/local/etc/rc.d/jenkins stop";
}

nagios {
      host.hostname = nagios;
      path = /var/jails/nagios;
      exec.start = "/bin/sh /usr/local/etc/rc.d/nagios start";
      exec.stop = "/bin/sh /usr/local/etc/rc.d/nagios stop";
      allow.raw_sockets;
}

mongodb {
     host.hostname = mongodb;
     path = /var/jails/mongodb;
     mount = "/var/db/mongodb /var/jails/mongodb/var/db/mongodb nullfs rw 0 0";
     exec.start = "/bin/sh /usr/local/etc/rc.d/mongod start";
     exec.stop = "/bin/sh /usr/local/etc/rc.d/mongod stop";
}
      
rundeck {
	host.hostname = rundeck;
	path = /var/jails/rundeck;
	exec.start = "/usr/local/etc/rc.d/rundeck start";
}

kafka {
      host.hostname = kafka;
      path = /var/jails/kafka;
      exec.jail_user = kafka;
      exec.start = "cd /usr/local/kafka && bin/zookeeper-server-start.sh -daemon config/zookeeper.properties && bin/kafka-server-start.sh -daemon config/server.properties";
      exec.stop = "/usr/local/bin/kafkastop.sh";
      mount = "/var/kafka /var/jails/kafka/var/kafka nullfs rw 0 0";
}

#
# Thin Jails
#

funnel-retriever {
      host.hostname = funnel-retriever;
      path = /var/jails/funnel-retriever;
      mount.fstab = /var/jails/thin-base/etc/fstab.jail.funnel-retriever;
      exec.start = "/usr/bin/env LOG_DIR=/opt/app/var/log /usr/local/bin/runjava11app.sh /opt/app/app.jar";
      exec.jail_user = app;
}

funnel-persistence {
      host.hostname = funnel-persistence;
      path = /var/jails/funnel-persistence;
      mount.fstab = /var/jails/thin-base/etc/fstab.jail.funnel-persistence;
      exec.start = "/usr/bin/env LOG_DIR=/opt/app/var/log /usr/local/bin/runjava11app.sh /opt/app/app.jar";
      exec.jail_user = app;
}

funnel-chronos {
      host.hostname = funnel-chronos;
      path = /var/jails/funnel-chronos;
      mount.fstab = /var/jails/thin-base/etc/fstab.jail.funnel-chronos;
      exec.start = "/usr/bin/env LOG_DIR=/opt/app/var/log /usr/local/bin/runjava11app.sh /opt/app/app.jar";
      exec.jail_user = app;
}

funnel-rest {
      host.hostname = funnel-rest;
      path = /var/jails/funnel-rest;
      mount.fstab = /var/jails/thin-base/etc/fstab.jail.funnel-rest;
      exec.start = "/usr/bin/env LOG_DIR=/opt/app/var/log /usr/local/bin/runjava11app.sh /opt/app/app.jar";
      exec.jail_user = app;
}
