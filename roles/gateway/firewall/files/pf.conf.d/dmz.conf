# Maintained by Ansible

##
## DMZ
##

# After migration to OpenBSD 5.3, nagios started reporting starscream
# and yayap being down and up again, thus hoisting them into flapping
# state. Couriousily enough, eventhorizon wasn't affected. Lots of icmp6
# messages like those
#
#   14:53:14.219847 rule 15/(match) [uid 0, pid 4843] block out on vr2:\
#       fe80::20d:b9ff:fe1d:3dae > ff02::1:ff00:2:
#
# appeared in in pflog0. So in response I added the line below (there
# is also a similar line in pf.conf for the internal network).
pass quick on $dmz_if inet6 proto icmp6 to { fe80::/64, fec0::/10, ff02::/32} no state
pass quick on $dmz_if inet6 proto icmp6 from { fe80::/64, fec0::/10, ff02::/32} no state
pass quick on $dmz_if inet6 proto icmp6 from $dmz2 to $dmz2 no state

# Default services
#pass in quick on $dmz_if proto tcp from $dmzmachines to $mailserver_int port 25 label "DMZ SMTP IPv4"
pass in quick on $dmz_if inet6 proto tcp from $dmzmachines6 to $mailserver_int6 port 25 label "DMZ SMTP IPv6"
#pass in quick on $dmz_if proto tcp from $dmzmachines to $borg_server port 2222 label "DMZ Backup IPv4"
pass in quick on $dmz_if inet6 proto tcp from $dmzmachines6 to $borg_server6 port 2222 label "DMZ Backup IPv6"
pass in quick on $dmz_if inet proto icmp from $dmzmachines to any
pass in quick on $dmz_if inet6 proto icmp6 from $dmzmachines6 to any
#pass in quick on $dmz_if proto { tcp, udp } from $dmzmachines to $dnsserver port 53 label "DMZ DNS IPv4"
pass in quick on $dmz_if inet6 proto { tcp, udp } from $dmzmachines6 to $dnsserver6 port 53 label "DMZ DNS IPv6"
pass in quick on $dmz_if proto { tcp, udp } from $dmzmachines to any port 123
pass in quick on $dmz_if inet proto tcp from $dmzmachines to $ietf_leap_seconds port 443 modulate state # fetch leap seconds.

# ssh and vpn
pass in quick on $dmz_if inet6 proto tcp from $sshserver6 to $sshserver6_lan port $sshserverports
pass out quick on $dmz_if proto tcp from any to $sshserver port $sshserverports modulate state
pass out quick on $dmz_if proto udp from any to $vpnserver port $vpnserverports modulate state
pass in quick on $dmz_if inet6 proto tcp from $sshserver6 to $pkg_server_internal6 port 80 modulate state # poudriere ports
pass in quick on $dmz_if inet6 proto tcp from $sshserver6 to ($dmz_if) port 48621 modulate state # Agentsmith
pass in quick on $dmz_if inet proto tcp from $sshserver to $fbportauditserver port 80 modulate state # for downloading portaudit dbs
pass in quick on $dmz_if inet proto tcp from $sshserver to $fbkernelrepo port 80 modulate state # for downloading kernels
pass in quick on $dmz_if inet proto tcp from $sshserver to 149.28.239.174 port 80 modulate state # www.ipdeny.com
pass in quick on $dmz_if inet proto tcp from $wlan1_pi to 192.168.100.2 port 443 modulate state # allow PIs to fetch artifacts

# VPN
pass in quick on $dmz_if proto $allproto from $vpn1 to any label "OpenVPN" # VPN has full access
# Wlan addresses without vpn
pass in quick on $dmz_if proto $allproto from { $wlan1_no_vpn $wlan1_pi } to any label "WLAN Full Access" # Access is restricted somewhere else
# OpenVPN
pass in quick on $dmz_if proto udp from $wlan1 to port $vpnserverports modulate state label "OpenVPN Server"

# everything can access the dmz but not vice versa.
pass out quick on $dmz_if proto $allproto from <localnets> to <localnets> modulate state label "DMZ Ingress IPv4"
pass out quick on $dmz_if inet6 proto $allprotov6 from <localnets6> to <localnets6> modulate state label "DMZ Ingress IPv6"

##
## DMZ End
##
