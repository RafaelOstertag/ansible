#!/bin/sh

set -eu

INSTANCE_NAME={{ instance_name }}
RUNNING_CODE=16
STOPPING_CODE=64
STOPPED_CODE=80
TIMEOUT=60

. /usr/local/aws/bin/activate

launch_instance() {
	local current_state=`get_instance_state`
	if [ ${current_state} -ne ${STOPPED_CODE} ]
	then
		echo "Instance ${INSTANCE_NAME} is not stopped. Will not start it" 1>&2
		return 1
	fi
	aws lightsail start-instance --instance ${INSTANCE_NAME} > /dev/null
}

get_instance_ip() {
	local i=0
	local ip=""
	while [ $i -lt ${TIMEOUT} ]
	do
		ip=`aws lightsail --output json get-instance --query instance.publicIpAddress --instance ${INSTANCE_NAME} | tr -d '"'`
		if [ -n ${ip} -a ${ip} != null ]
		then
			echo ${ip}
			break
		fi
		sleep 1
		i=`expr $i + 1`
	done
	if [ $i -ge ${TIMEOUT} ]
	then
		echo "Unable to get public IP for ${INSTANCE_NAME}" 1>&2
		return 1
	fi
}

stop_instance() {
	aws lightsail stop-instance --instance ${INSTANCE_NAME} >/dev/null
}

get_instance_state() {
	aws lightsail --output json get-instance-state --query state.code --instance ${INSTANCE_NAME}
}

wait_for_ssh() {
	local public_ip=$1
	local i=0
	while [ $i -lt ${TIMEOUT} ]
	do
		if nc -z ${public_ip} 22
		then
			break
		fi
		sleep 1
		i=`expr $i + 1`
	done
	if [ $i -ge ${TIMEOUT} ]
	then
		echo "$INSTANCE_NAME not listening on port 22 after ${TIMEOUT} seconds" 1>&2
		return 1
	fi
	return 0
}


instance_state=`aws lightsail --output json get-instance-state --query state.code --instance ${INSTANCE_NAME}`
if [ ${instance_state} -eq ${STOPPED_CODE} ]
then
	echo "Launch instance"
	launch_instance
fi

echo "Waiting for public IP"
public_ip=`get_instance_ip`
echo "Found public IP: $public_ip"

echo "Wait for ssh to come online"
wait_for_ssh $public_ip

ssh -o StrictHostKeyChecking=no jenkins@$public_ip 'curl -s -o /var/cache/jenkins-slave/agent.jar https://jenkins.guengel.ch/jenkins/jnlpJars/agent.jar' </dev/null
trap 'stop_instance' EXIT HUP INT QUIT TERM KILL
# Here we become the jenkins slave
ssh -o StrictHostKeyChecking=no jenkins@$public_ip 'java -jar /var/cache/jenkins-slave/agent.jar'
