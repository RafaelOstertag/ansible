---
- name: Jenkins Slaves
  hosts: jenkins_slaves
  user: root
  tasks:
    - name: Create slave user
      user:
        comment: Jenkins Slave User
        createhome: yes
        generate_ssh_key: yes
        name: jenkins
        state: present
        system: no
        home: /var/cache/jenkins-slave

    - name: Slurp user ssh public key
      slurp:
        src: /var/cache/jenkins-slave/.ssh/id_rsa.pub
      register: ssh_pub

    - name: Enable ssh login with key
      authorized_key:
        manage_dir: yes
        user: jenkins
        state: present
        key: "{{ ssh_pub['content'] | b64decode }}"

    - name: FreeBSD packages
      when: "ansible_distribution == 'FreeBSD'"
      block:
        - name: install packages
          pkgng:
            name:
              - jq
              - autoconf
              - automake
              - cppunit
              # When building agentsmith web page
              - docbook-xsl
              - gettext
              - gettext-tools
              - git
              - gmake
              - gradle
              # When building agentsmith web page
              - hs-pandoc
              - libargon2
              - libtool
              - libxslt
              - npm
              - openjdk17
              - openjdk11
              - openjdk8
              - pcre
              - pkgconf
              # Whe building yapet docs
              - ruby27-gems
              - tidy-html5
              # When building agentsmith web page
              - tidy4
              - w3m
            state: present
        - import_role:
            name: freebsd/npm-cert-store

    - name: Linux packages Debian
      when: "ansible_distribution == 'Debian'"
      block:
        - import_role:
            name: k8s/k8s-repo
          when: "ansible_machine == 'x86_64'"
        - import_role:
            name: k8s/helm
          when: "ansible_machine == 'x86_64'"
        - name: Linux Packages
          apt:
            name:
              - autoconf
              - automake
              - autopoint
              - docbook-xsl
              - g++
              - gettext
              - git
              - jq
              - kubectl
              - libargon2-0-dev
              - libcppunit-dev
              - libncurses-dev
              - libpcre3-dev
              - libtool
              - openjdk-11-jdk
              - w3m
              - xsltproc
              - xvfb
            state: present
        - name: Linux amd64 packages
          apt:
            name:
              - openjdk-17-jdk
          when: "ansible_machine == 'x86_64'"
        - import_role:
            name: raspberrypi/silverbee-buildhost
          when: "ansible_machine == 'x86_64'"
        - import_role:
            name: raspberrypi/yellowfish-buildhost
        - import_role:
            name: linux/nodejs
        - import_role:
            name: linux/sonar-buildwrapper
          when: "ansible_machine == 'x86_64'"

    - name: Linux packages Ubuntu
      when: "ansible_distribution == 'Ubuntu' and ansible_machine == 'aarch64'"
      apt:
        name:
          - openjdk-11-jdk
          - openjdk-17-jdk

    - name: OpenBSD packages
      when: "ansible_distribution == 'OpenBSD'"
      openbsd_pkg:
        name:
          - argon2
          - autoconf-2.69p3
          - automake-1.15.1
          - cppunit
          - docbook-xsl
          - gettext-runtime
          - gettext-tools
          - git
          - gmake
          - jdk-1.8.0.302.b08.1p0v0
          - jdk-11.0.12.7.1v0
          - jq
          - libtool
          - libxslt
          - pcre
          - w3m-0.5.3pl20210102p0
        state: present

    - name: OpenBSD fixes
      when: "ansible_distribution == 'OpenBSD'"
      block:
        - name: Fix pkg config file
          lineinfile:
            path: /usr/local/lib/pkgconfig/libargon2.pc
            regexp: "^Libs:\\s+"
            line: "Libs: -L${libdir} -largon2"
            state: present

    - name: Install guengel.ch certificate
      when: "ansible_distribution == 'FreeBSD'"
      import_role:
        name: freebsd/javacerts
      tags:
        - javacerts

    - name: Install guengel.ch certificate
      when: "ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'"
      import_role:
        name: linux/javacerts
      tags:
        - javacerts
